"""empty message

Revision ID: 4bbcf4a3c046
Revises: 
Create Date: 2019-03-28 10:33:58.863017

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4bbcf4a3c046'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feedback',
    sa.Column('feedback_id', sa.Integer(), nullable=False),
    sa.Column('user_ID', sa.String(length=80), nullable=True),
    sa.Column('prediction', sa.Integer(), nullable=True),
    sa.Column('rating', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('feedback', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('feedback_id')
    )
    op.create_table('prediction',
    sa.Column('prediction_id', sa.Integer(), nullable=False),
    sa.Column('analysis_model_name', sa.String(length=40), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('prediction_id')
    )
    op.create_table('prepared_data',
    sa.Column('prepared_id', sa.String(length=80), nullable=False),
    sa.Column('project_ID', sa.Integer(), nullable=True),
    sa.Column('preprared_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('sample_ID', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('prepared_id')
    )
    op.create_table('project',
    sa.Column('project_id', sa.String(length=80), nullable=False),
    sa.Column('raw_data_id', sa.Integer(), nullable=True),
    sa.Column('algo', sa.String(length=40), nullable=True),
    sa.Column('user_id', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('raw_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=80), nullable=True),
    sa.Column('raw_data_set', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviwer',
    sa.Column('project_id', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('sample_data',
    sa.Column('sample_ID', sa.Integer(), nullable=False),
    sa.Column('sample_Data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('trained_model', postgresql.BYTEA(), nullable=True),
    sa.PrimaryKeyConstraint('sample_ID')
    )
    op.create_table('trained_model_result',
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('model', postgresql.BYTEA(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('parameter', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('model_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.String(length=80), nullable=False),
    sa.Column('prediction', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('project_id', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('trained_model_result')
    op.drop_table('sample_data')
    op.drop_table('reviwer')
    op.drop_table('raw_data')
    op.drop_table('project')
    op.drop_table('prepared_data')
    op.drop_table('prediction')
    op.drop_table('feedback')
    # ### end Alembic commands ###
